import { useReducer as e, useMemo as t, useCallback as n, createElement as r } from "react";

import i from "react-ssr-prepass";

import { createClient as a, ssrExchange as o, dedupExchange as l, cacheExchange as u, fetchExchange as s, Provider as f } from "urql";

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) {
        if (Object.prototype.hasOwnProperty.call(n, r)) {
          e[r] = n[r];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

var p = null;

function resetClient() {
  p = null;
}

function initUrqlClient(e, t) {
  var n = "undefined" == typeof window;
  if (n || !p) {
    (p = a(_extends({}, e, {
      suspense: t && (n || e.suspense)
    }))).toJSON = function() {
      return null;
    };
  }
  return p;
}

var v;

function withUrqlClient(a, p) {
  if (!p) {
    p = {};
  }
  return function(c) {
    var d = Boolean((c.getInitialProps || p.ssr) && !p.neverSuspend);
    var WithUrql = function(i) {
      var h = i.pageProps;
      var m = i.urqlClient;
      var q = i.urqlState;
      var C = function objectWithoutProperties(e, t) {
        var n = {};
        for (var r in e) {
          if (Object.prototype.hasOwnProperty.call(e, r) && -1 === t.indexOf(r)) {
            n[r] = e[r];
          }
        }
        return n;
      }(i, [ "pageProps", "urqlClient", "urqlState" ]);
      var g = e((function(e) {
        return e + 1;
      }), 0);
      var x = g[0];
      var P = g[1];
      var y = h && h.urqlState || q;
      var w = t((function() {
        if (m && !x) {
          return m;
        }
        if (!v || "undefined" == typeof window) {
          v = o({
            initialState: y,
            isClient: !0,
            staleWhileRevalidate: "undefined" != typeof window ? p.staleWhileRevalidate : void 0
          });
        } else if (!x) {
          v.restoreData(y);
        }
        var e = a(v);
        if (!e.exchanges) {
          e.exchanges = [ l, u, v, s ];
        }
        return initUrqlClient(e, d);
      }), [ m, y, x ]);
      var _ = n((function() {
        resetClient();
        v = o({
          initialState: void 0
        });
        P();
      }), []);
      return r(f, {
        value: w
      }, r(c, _extends({}, C, {
        pageProps: h,
        urqlClient: w,
        resetUrqlClient: _
      })));
    };
    WithUrql.displayName = "withUrqlClient(" + (c.displayName || c.name || "Component") + ")";
    if (c.getLayout) {
      WithUrql.getLayout = c.getLayout;
    }
    if (c.getInitialProps || p.ssr) {
      WithUrql.getInitialProps = function(e) {
        try {
          let q = !1;
          function _temp4(e) {
            if (q) {
              return e;
            }
            function _temp2() {
              return _extends({}, m, {
                urqlState: v ? v.extractData() : void 0,
                urqlClient: h
              });
            }
            if ("undefined" != typeof window) {
              return _extends({}, m, {
                urqlClient: h
              });
            }
            var a = _extends({}, m, {
              urqlClient: h
            });
            var o = n ? a : {
              pageProps: a
            };
            const l = function() {
              if (!p.neverSuspend) {
                return Promise.resolve(i(r(t, o))).then((function() {}));
              }
            }();
            return l && l.then ? l.then(_temp2) : _temp2();
          }
          var t = e.AppTree;
          var n = !!e.Component;
          var f = n ? e.ctx : e;
          var v = o({
            initialState: void 0
          });
          var d = a(v, f);
          if (!d.exchanges) {
            d.exchanges = [ l, u, v, s ];
          }
          var h = initUrqlClient(d, !p.neverSuspend);
          if (h) {
            f.urqlClient = h;
          }
          var m = {};
          const C = function() {
            if (c.getInitialProps) {
              return Promise.resolve(c.getInitialProps(e)).then((function(e) {
                m = e;
                if (f.res && (f.res.writableEnded || f.res.finished)) {
                  q = !0;
                  return _extends({}, m, {
                    urqlClient: h
                  });
                }
              }));
            }
          }();
          return Promise.resolve(C && C.then ? C.then(_temp4) : _temp4(C));
        } catch (e) {
          return Promise.reject(e);
        }
      };
    }
    return WithUrql;
  };
}

export { initUrqlClient, withUrqlClient };
//# sourceMappingURL=next-urql.es.js.map
